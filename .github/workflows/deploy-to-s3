name: Root-Conf S3 Deploy

on:
  workflow_call:
    inputs:
      CI_ENV:
        required: true
        type: string
      CONTENTFUL_ENVIRONMENT:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_DEFAULT_REGION:
        required: true
      AWS_SESSION_TOKEN:
        required: true
      S3_ORIGIN_BUCKET:
        required: true
      SONAR_TOKEN:
        required: true        
      

jobs:

  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout 
        uses: actions/checkout@v4
        with:
          fetch-depth: 5

      - name: Instalar Node.js y npm
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: rm -rf ./out && npm run build
        shell: bash

      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7

#    Run sonar-scanner test
      - name: SonarQube Scan
        run: sonar-scanner -X
              -Dproject.settings=./.github/sonar/sonar-project.properties
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Revisar archivos 
        run: tree & ls -lath

      
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}



  Build_and_Deploy:
    needs:  Testing
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout 
        uses: actions/checkout@v4
        with:
          fetch-depth: 5

      - name: Instalar Node.js y npm
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: rm -rf ./out && npm run build
        shell: bash

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{secrets.AWS_DEFAULT_REGION}}

      - name: S3 Deploy
        run: aws s3 sync dist/ s3://$S3_ORIGIN_BUCKET
        shell: bash
        env:
          S3_ORIGIN_BUCKET: ${{ secrets.S3_ORIGIN_BUCKET }}
